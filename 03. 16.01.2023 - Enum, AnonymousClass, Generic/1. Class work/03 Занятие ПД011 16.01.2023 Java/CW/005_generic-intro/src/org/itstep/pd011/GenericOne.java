package org.itstep.pd011;

/**
 *
 * Обобщенный класс - generic class
 * Тип поля - параметр для генерации исходного кода класса, таких типов м.б. больше 1
 * Обобщенные типы удобны для хранения и выполенния каких-то обработок, общих
 * для нескольких типов
 *
 * Однако выполнение арифметических операций для обобщенных типов затруднено - т.к.
 * неизвестен тип, то неизвестны и допустимые операции этого типа
 *
 * Основное ограничение обобщенных классов - допустимы только ссылочные типы в качестве
 * типов параметров класса
 */
public class GenericOne<T> {
    private T a;  // поле обобщенного типа

    // конструктор для обобщенного класса - тип поля T
    public GenericOne(T a) {
        this.a = a;
    } // GenericOne

    // геттеры и сеттеры
    public T getA() { return a; }
    public void setA(T a) {
        // присваиваие есть ао всех типах
        this.a = a;
    }

    // арифметическая обработка дженерика крайне затруднена
    // public T twice() { return 2*a; }

    // вывод в строку - не проблема, т.к. метод toString() определен
    // у всех типов
    @Override public String toString() {
        return a.toString();
    } // toString
} // class GenericOne

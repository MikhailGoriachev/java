package org.itstep.pd011;

/**
 * Общий ресурс - склад, обмен данными между двумя потоками
 */
public class Store {
    final int LIMIT = 3;   // неснижаемый остаток на складе
    private int product;   // количество товара

    // положить на склад одну единицу товара - операция для Производителя
    synchronized public void put() {

        // ждем пока остаток на складе станет равен неснижаемому лимиту
        while(product > LIMIT) {
            try {
                // ожидание изменений, выполняемых другим потоком
                // находимся внутри wait() пока другой поток не выполнит вызов notify()
                // когда вызов notify() другим потоком выполнен - возвращаемся из wait()
                // System.out.println("\033[31;1mput: wait\033[0m");
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            } // try-catch
        } // while

        // положить товар на склад, известить другой поток об изменениях на складе
        product++;
        System.out.printf("Склад        : \033[34mПроизводитель\033[0m поместил товар на склад, остаток товара: %2d\n", product);
        notify();  // !!! извещаем другой поток !!! только первый поток в очереди !!!
        // для извещения всех потоков в очереди используется метод notifyAll()
    } // put

    // забрать со склада одну единицу товара - операция для Потребителя
    synchronized public void get() {
        // ожидание пока на складе не появится достаточное количество товара
        // т.е. товара должно стать больше неснижаемого остатка
        while(product <= LIMIT) {
            try {
                // ожидание изменений, выполняемых другим потоком
                // находимся внутри wait() пока другой поток не выполнит вызов notify()
                // когда вызов notify() другим потоком выполнен - возвращаемся из wait()
                // System.out.println("\033[31;1mget: wait\033[0m");
                this.wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            } // try-catch
        } // while

        product--;
        System.out.printf("Склад        : \033[35mПотребитель\033[0m забрал товар со склада, остаток товара   : %2d\n", product);
        notify();   // известить другой поток о завершении блокировки
    } // get
} // class Store

